plugins {
    id 'org.jetbrains.kotlin.jvm' version "$kotlinVersion"
    id 'maven-publish'
    id 'java-gradle-plugin'
    id 'jacoco'
}

group = '{{project.group}}'
version = '{{project.version}}'

{{define 'repositories' project.module_repositories ~}}
repositories {
    {{#if repositories.local ~}}
    maven {
        url '../../{{repositories.local}}'
    }
    {{/if}}
    {{#each repositories.remote as |repository_url| ~}}
    maven {
        url '{{repository_url}}'
    }
    {{/each}}
    jcenter()
}

dependencies {
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
    implementation 'org.jetbrains.kotlin:kotlin-reflect'
    implementation 'laplacian:laplacian.generator:1.0.0'
    {{#each project.all_plugins as |plugin| ~}}
    implementation '{{plugin.artifact_id}}'
    {{/each ~}}
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.6.0'
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
    kotlinOptions {
        jvmTarget = "$kotlinJvmTarget"
    }
}

gradlePlugin {
    plugins {
        schemaPlugin {
            id = '{{project.group}}.{{project.name}}-plugin'
            implementationClass = '{{project.namespace}}.gradle.{{upper-camel project.name}}Plugin'
        }
    }
}

task sourcesJar(type: Jar) {
    archiveClassifier = 'sources'
    from sourceSets.main.allSource
}

test {
    useJUnitPlatform()
}

jacoco {
    toolVersion = "0.8.5"
}

publishing {
    repositories {
        maven {
            url '../../{{repositories.local}}'
        }
    }
    publications {
        mavenJava(MavenPublication) {
            artifactId = '{{project.name}}-plugin'
            artifact sourcesJar
        }
    }
}